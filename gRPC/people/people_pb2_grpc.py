# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import people_pb2 as people__pb2


class PeopleSearchStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.FindByFullName = channel.unary_unary(
        '/people.PeopleSearch/FindByFullName',
        request_serializer=people__pb2.Name.SerializeToString,
        response_deserializer=people__pb2.PeopleInfo.FromString,
        )
    self.FindByFirstCharacter = channel.unary_stream(
        '/people.PeopleSearch/FindByFirstCharacter',
        request_serializer=people__pb2.Name.SerializeToString,
        response_deserializer=people__pb2.PeopleInfo.FromString,
        )


class PeopleSearchServicer(object):

  def FindByFullName(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FindByFirstCharacter(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PeopleSearchServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'FindByFullName': grpc.unary_unary_rpc_method_handler(
          servicer.FindByFullName,
          request_deserializer=people__pb2.Name.FromString,
          response_serializer=people__pb2.PeopleInfo.SerializeToString,
      ),
      'FindByFirstCharacter': grpc.unary_stream_rpc_method_handler(
          servicer.FindByFirstCharacter,
          request_deserializer=people__pb2.Name.FromString,
          response_serializer=people__pb2.PeopleInfo.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'people.PeopleSearch', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
